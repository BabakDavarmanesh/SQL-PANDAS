Table: Employee

+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| salary      | int  |
+-------------+------+
id is the primary key (column with unique values) for this table.
Each row of this table contains information about the salary of an employee.
 

Write a solution to find the second highest distinct salary from the Employee table. If there is no second highest salary, return null (return None in Pandas).

The result format is in the following example.

 

Example 1:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
Output: 
+---------------------+
| SecondHighestSalary |
+---------------------+
| 200                 |
+---------------------+
Example 2:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
+----+--------+
Output: 
+---------------------+
| SecondHighestSalary |
+---------------------+
| null                |
+---------------------+
---------------------------------------------------------------------------------------------
-->SQL
---------------------------------------------------------------------------------------------
select max(salary) as SecondHighestSalary 
from Employee 
where salary < (select max(salary) from Employee );
---------------------------------------------------------------------------------------------
--> Pandas
---------------------------------------------------------------------------------------------
import pandas as pd

def second_highest_salary(employee: pd.DataFrame) -> pd.DataFrame:
    # Drop duplicates to get distinct salaries
    unique_salaries = employee['salary'].drop_duplicates()
    
    # Sort descending and take the second highest if it exists
    sorted_salaries = unique_salaries.sort_values(ascending=False).reset_index(drop=True)
    
    if len(sorted_salaries) >= 2:
        second_highest = sorted_salaries[1]
    else:
        second_highest = None  # Return None if second highest doesn't exist

    return pd.DataFrame({'SecondHighestSalary': [second_highest]})